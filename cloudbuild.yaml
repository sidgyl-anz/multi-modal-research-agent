steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/multi-modal-researcher:$COMMIT_SHA', '.']
    id: Build

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/multi-modal-researcher:$COMMIT_SHA']
    id: Push

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'multi-modal-researcher' # Name of the Cloud Run service
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/multi-modal-researcher:$COMMIT_SHA'
      - '--region=us-central1' # Specify your desired region
      - '--platform=managed'
      - '--allow-unauthenticated' # Allows public access; change if not desired
      - '--port=8080' # The port your application listens on, matching Dockerfile's PORT or CMD default
      - '--set-env-vars=GEMINI_API_KEY=$$GEMINI_API_KEY' # Set environment variables
      # Add other environment variables as needed, e.g., --set-env-vars=KEY1=VALUE1,KEY2=VALUE2
      # Cloud Run automatically sets the PORT environment variable for your container
    id: Deploy
    secretEnv: ['GEMINI_API_KEY']

# Configuration for GEMINI_API_KEY secret from Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/GEMINI_API_KEY/versions/latest
    env: 'GEMINI_API_KEY' # This makes it available as $$GEMINI_API_KEY

# Store images in Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/multi-modal-researcher:$COMMIT_SHA'

# Substitutions (can be overridden at build time)
substitutions:
  _REGION: 'us-central1'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
